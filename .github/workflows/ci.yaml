name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm run lint --if-present
    - run: npm test
    - uses: actions/upload-artifact@v3
      if: ${{ matrix.node-version == '16.x' }}
      with:
        name: coverage
        path: |
          coverage
  sonar:
    runs-on: ubuntu-latest
    needs:
    - build
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: actions/download-artifact@v3
      with:
        name: coverage
        path: coverage
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONARQUBE_KEY }}
  build-image:
    runs-on: ubuntu-latest
    needs:
     - build
    env:
      REGISTRY: 'ghcr.io'
      IMAGE_NAME: 'curium-rocks/kube-starter-template'
    permissions:
      contents: read
      packages: write
      id-token: write
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install cosign
        uses: sigstore/cosign-installer@55fd288876ce156f3d39276ebf89f86bf3702f37
        with:
          cosign-release: 'v1.13.1'
      # for multi arch container builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all
      - name: Setup Docker buildx
        id: buildx
        timeout-minutes: 4
        uses: docker/setup-buildx-action@c252a3bb80dae98127b9329b8aa1ff35b71ae980
      - name: Log into registry
        timeout-minutes: 5
        uses: docker/login-action@bc135a1993a1d0db3e9debefa0cfcb70443cc94c
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        timeout-minutes: 5
        uses: docker/metadata-action@7cb52e275081c4e9294d257dd188716a82c82670
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
            type=raw,value={{date 'YYYYMMDD'}}-{{sha}}
      - name: Build Docker image
        id: push
        timeout-minutes: 25
        uses: docker/build-push-action@4eb68bb2ac65309f0a26ed9abf968f9ea36bd29f
        with:
          context: .
          load: false
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64, linux/arm64
      - name: Sign the published Docker image
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: cosign sign --force --recursive ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.push.outputs.digest }}
